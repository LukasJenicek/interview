# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
  xml_storage: "%kernel.root_dir%/../storage/watchstore.xml"
  cache_storage: "%kernel.root_dir%/../storage/cache.json"

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\Infrastructure\Persistence\Cache\FileStorage:
      autowire: false
      arguments: ['%cache_storage%']

    App\Infrastructure\Persistence\Xml\XmlWatchLoader:
      arguments: ['%xml_storage%']

    App\Infrastructure\Watch\CacheAbleWatchRepository:
      autowire: false
      arguments: ['@App\Infrastructure\Watch\XmlWatchRepository', '@App\Infrastructure\Persistence\Cache\FileStorage', '@App\Infrastructure\Serializer\JsonToDomainObjectSerializer']

    App\Domain\Watch\WatchRepository: '@App\Infrastructure\Watch\CacheAbleWatchRepository'

    App\Infrastructure\Listener\ExceptionListener:
      tags:
        - { name: kernel.event_listener, event: kernel.exception, priority: 1 }



    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
